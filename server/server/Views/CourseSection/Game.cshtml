@using Microsoft.EntityFrameworkCore.Metadata.Internal
@model server.Models.CourseSection

@{
    ViewData["Title"] = "Details";
}
<style>
    body{
        height: 100vh;
    }
</style>
<canvas id="unity-canvas" width=960 height=600 style="width: 960px; height: 600px; background: #231F20"></canvas>

<div class="header-background" style="height: 100%">
    <div class="container-md align-items-end mb-2 h-100 d-flex">

    </div>
</div>

@section Scripts {
    <script src="~/unity/Build/unity.loader.js"></script>
    <script>
      if (/iPhone|iPad|iPod|Android/i.test(navigator.userAgent)) {
        // Mobile device style: fill the whole browser client area with the game canvas:
        var meta = document.createElement('meta');
        meta.name = 'viewport';
        meta.content = 'width=device-width, height=device-height, initial-scale=1.0, user-scalable=no, shrink-to-fit=yes';
        document.getElementsByTagName('head')[0].appendChild(meta);

        var canvas = document.querySelector("#unity-canvas");
        canvas.style.width = "100%";
        canvas.style.height = "100%";
        canvas.style.position = "fixed";

        document.body.style.textAlign = "left";
      }
      
      createUnityInstance(document.querySelector("#unity-canvas"), {
        dataUrl: "/unity/Build/unity.data.unityweb",
        frameworkUrl: "/unity/Build/unity.framework.js.unityweb",
        codeUrl: "/unity/Build/unity.wasm.unityweb",
        streamingAssetsUrl: "StreamingAssets",
        companyName: "DefaultCompany",
        productName: "VideojuegoTec",
        productVersion: "0.1",
        // matchWebGLToCanvasSize: false, // Uncomment this to separately control WebGL canvas render size and DOM element size.
        // devicePixelRatio: 1, // Uncomment this to override low DPI rendering on high DPI displays.
      }).then(unityInstance => {
          @foreach (var question in Model.Questions)
          {
              @Html.Raw("unityInstance.SendMessage('TriviaCanvas', 'AddQuestion', '" + question.QuestionText + "');\n")
              foreach (var answer in question.Answers)
              {
                  if (answer.Correct)
                  {
                      @Html.Raw("unityInstance.SendMessage('TriviaCanvas', 'AddCorrectAnswer', '" + answer.Text + "');\n")
                  }
                  else
                  {
                      @Html.Raw("unityInstance.SendMessage('TriviaCanvas', 'AddWrongAnswer', '" + answer.Text + "');\n")
                  }
              }
          }
      }) ;
      
      
    </script>
}